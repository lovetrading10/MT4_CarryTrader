@{
    ViewData["Title"] = "Role";//"Membership";
}
<!-- Content Wrapper. Contains page content -->
<style>
    .e-grid .e-dialog .gridform .e-rowcell{
        padding: 12px!important;
    }
</style>
<div class="content-wrapper">
    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title text-primary"><i class="fa fa-gear"></i> @ViewData["Title"]</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div id="Grid"></div>
            </div>
            <!-- /.box-body -->
            <div class="box-footer">
            </div>
            <!-- /.box-footer-->
        </div>
        <!-- /.box -->
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->

<script id="templateForm" type="text/template">
    <input hidden id="MembershipId" name="MembershipId" value="{{:MembershipId}}" />
    <table cellspacing="10">
        <td>
            <!--Membership Name-->
            Role Name
        </td>
        <td colspan="3">
            <input id="Name" name="Name" value="{{:Name}}" />
        </td>
        </tr>
    </table>
    <div class="box">
        <div class="box-body">
            <div id="GridRole"></div>
        </div>
    </div>
</script>

@section Styles{

}
@section Scripts{
    <script type="text/javascript">
        $(function () {

            var dataManager = ej.DataManager({
                url: "/api/Membership",
                adaptor: new ej.WebApiAdaptor(),
                offline: true
            });

            dataManager.ready.done(function (e) {

                $("#Grid").ejGrid({
                    dataSource: ej.DataManager({
                        json: e.result,
                        adaptor: new ej.remoteSaveAdaptor(),
                        insertUrl: "/api/Membership/Insert",
                        removeUrl: "/api/Membership/Remove",
                    }),
                    toolbarSettings: {
                        showToolbar: true,
                        toolbarItems: ["add", "edit", "delete", "search", "printGrid"]
                    },
                    editSettings: {
                        allowEditing: true,
                        allowAdding: true,
                        allowDeleting: true,
                        showDeleteConfirmDialog: true,
                        editMode: "dialogtemplate",
                        dialogEditorTemplateID: "#templateForm",
                    },
                    isResponsive: true,
                    enableResponsiveRow: true,
                    allowSorting: true,
                    allowSearching: true,
                    allowFiltering: true,
                    filterSettings: {
                        filterType: "excel",
                        maxFilterChoices: 100,
                        enableCaseSensitivity: false
                    },
                    allowPaging: true,
                    pageSettings: { pageSize: 10, printMode: ej.Grid.PrintMode.CurrentPage },
                    columns: [
                        { field: "MembershipId", headerText: 'Id', isPrimaryKey: true, isIdentity: true, visible: false },
                        { field: "Name", headerText: 'Role Name', },
                    ],
                    actionComplete: "complete",
                    //actionBegin: "begin",
                });
            });
        });

        //function begin(args) {

        //    if (args.requestType == "add") {
        //        $("#Grid").ejGrid("option", { "editSettings": { dialogEditorTemplateID: "#templateForm" } });
        //    }
        //    else if (args.requestType == "beginedit") {
        //        $("#GridName").ejMaskEdit("disable");
        //        $("#Grid").ejGrid("option", { "editSettings": { dialogEditorTemplateID: "#templateShowForm" } });
        //    }
        //}

        function loadUserByMembershipId() {
            //renderWaiting();

            var MembershipId = $("#MembershipId").val();

            var dataManagerUser = ej.DataManager({
                url: "/api/User/GetByMembershipId/" + MembershipId,
                adaptor: new ej.WebApiAdaptor(),
                offline: true
            });

            dataManagerUser.ready.done(function (e) {
                $("#GridRole").ejGrid({
                    dataSource: ej.DataManager({
                        json: e.result,
                        adaptor: new ej.remoteSaveAdaptor(),
                        //updateUrl: "/api/Role/UpdateMembershipRole"
                    }),
                    toolbarSettings: {
                        showToolbar: true,
                        toolbarItems: [ "search" ]
                    },
                    editSettings: {
                        allowEditing: false,
                        allowAdding: false,
                        allowDeleting: false,
                    },
                    isResponsive: true,
                    enableResponsiveRow: true,
                    allowSorting: true,
                    allowSearching: true,
                    allowFiltering: true,
                    filterSettings: {
                        filterType: "excel",
                        maxFilterChoices: 100,
                        enableCaseSensitivity: false
                    },
                    allowPaging: true,
                    pageSettings: { pageSize: 10 },
                    columns: [
                        { field: "UserProfileId", headerText: 'Id', isPrimaryKey: true, isIdentity: true, visible: false },
                        { field: "Email", headerText: 'Email', validationRules: { required: true } },
                        { field: "FirstName", headerText: 'First Name', validationRules: { required: true } },
                        { field: "LastName", headerText: 'Last Name', validationRules: { required: false } },
                    ],
                    //actionBegin: "gridRoleBegin"
                });
            });
        }

        function complete(args) {
            $("#Name").ejMaskEdit({
                inputMode: 'Text',
            });

            if (args.requestType == 'beginedit') {
                $("#" + this._id + "_dialogEdit").ejDialog({ title: "Show Users" });
                $("#Name").ejMaskEdit("disable");
                loadUserByMembershipId();
            }
        }

        function renderWaiting() {
            $("#waitingPopup").ejWaitingPopup({
                showOnInit: true,
                target: "#GridRole"
            });
        }
    </script>
}


